{"version":3,"sources":["greeting.jsx","game_play.jsx","footer.jsx","app.js","index.js"],"names":["greeting","props","className","src","alt","GamePlay","state","compNumArr","playerInput","try","error","status","lastMove","pastGuesses","score","handleSubmit","bind","resetGame","getRandArr","update","numExactMatches","guess","scoreKeep","this","setState","fetch","then","res","json","data","catch","err","prevProps","prevState","split","count","i","length","guessArray","fT","inRange","tF","fF","arr","range","push","every","e","includes","preventDefault","matchesResponse","errorHandler","currentTarget","value","onClick","map","action","type","placeholder","onChange","React","Component","Footer","href","withRouter","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.c55c077f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Play from './game_play'\n\nconst greeting = (props) => (\n    <div className= 'header-link'>\n        <div className='logo-img'>\n            <img src=\"/linkedin.png\" alt=\"\"/>\n        </div>\n        <div className='logo-name'>\n            Mastermind\n        </div>\n    </div>\n);\n\nexport default greeting;","import React from 'react';\n// import inRange from './inRange';\nimport Bubbles from './bubbles';\nimport Greeting from './greeting';\n\n\nclass GamePlay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            compNumArr: null,\n            playerInput: '',\n            try: 0,\n            error: null,\n            status: 'play',\n            lastMove: 'Guess four numbers between 0 and 7',\n            pastGuesses: [],\n            score: 0\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.getRandArr = this.getRandArr.bind(this);\n        this.update = this.update.bind(this);\n        this.numExactMatches = this.numExactMatches.bind(this);\n        this.guess = this.guess.bind(this);\n        this.scoreKeep = this.scoreKeep.bind(this)\n        debugger\n    }\n    \n    resetGame() {\n        debugger\n        if (this.state.status === 'win') {\n            this.setState({\n                playerInput: '',\n                try: 0,\n                error: null,\n                compNumArr: null,\n                status: 'play',\n                pastGuesses: [],\n                score: this.state.score + this.scoreKeep()\n            })\n        } else if (this.state.status === 'fail') {\n            this.setState({\n                playerInput: '',\n                try: 0,\n                error: null,\n                compNumArr: null,\n                status: 'play',\n                pastGuesses: [],\n                score: 0\n            })\n        } else {\n            this.setState({\n                compNumArr: null,\n                playerInput: '',\n                try: 0,\n                error: null,\n                status: 'play',\n                lastMove: 'Guess four numbers between 0 and 7',\n                pastGuesses: [],\n                score: 0\n        })\n        }\n    }\n\n    scoreKeep(){\n        return (10 - this.state.try) * 10\n    }\n\n\n    getRandArr() {\n      fetch('http://localhost:9000/randomGen')\n        .then(res => res.json())\n        .then(data => this.setState({\n            \n            compNumArr: data,\n            status:'play',\n            try: 0,\n            lastMove: 'Guess four numbers between 0 and 7',\n            error:null,\n            pastGuesses: [], \n            // score: this.state.score\n\n        }))\n        .catch(err => {\n            this.setState({status: 'fail'})\n        });\n    }\n\n    componentDidMount(){\n        this.getRandArr();\n    }\n\n    componentDidUpdate(prevProps,prevState) {\n        if (prevState.status === 'win') {\n            this.getRandArr();\n        }\n    }\n    guess(){\n        return this.state.playerInput.split('')\n    }\n\n    numExactMatches(){\n        // debugger\n        let count = 0;\n        for (let i = 0; i < this.guess().length; i++){\n            if (this.state.compNumArr[i] === this.guess()[i]){\n                count += 1;\n            }\n        }\n        return count;\n    }\n\n    matchesResponse(){\n        let compNumArr = this.state.compNumArr;\n        // debugger\n        if (this.numExactMatches(this.guess()) === compNumArr.length) {\n            this.setState({\n                status: 'win'\n            })\n            return;\n        } else if (this.state.try === 9){\n            this.setState({\n                status:'fail',\n                pastGuesses: this.guessArray(),\n                playerInput:''\n            })\n        } else \n            {\n            this.setState({\n                lastMove: `You had ${this.numExactMatches()} exact matches. You have ${9 - this.state.try} tries left`,\n                pastGuesses: this.guessArray(),\n                playerInput:''\n            })\n        }\n    }\n\n    errorHandler(){\n        let fT = this.inRange(this.guess())[0] === false && this.inRange(this.guess())[1] === true;\n        let tF = this.inRange(this.guess())[0] === true && this.inRange(this.guess())[1] === false;\n        let fF = this.inRange(this.guess())[0] === false && this.inRange(this.guess())[1] === false;\n        debugger\n            if (fT) {\n            this.setState({\n                error: 'Error: Value Must be between 0 and 7',\n                try: this.state.try + 1\n            });\n            return;\n        } else if (tF){\n            this.setState({\n                error: 'Error: Whoaa there speedracer! Enter Four integers',\n                try: this.state.try + 1\n            });\n            return;\n        } else if (fF){\n            this.setState({\n                error: 'Error: The instructions should be displayed above. Sorry for the incovienence, please enter four numbers between 0 and 7.',\n                try: this.state.try + 1\n            });\n            return;\n        } else {\n            this.setState({\n                try: this.state.try + 1,\n                error: null\n            })\n        }\n    }\n\n    inRange(){\n        let arr = [];\n        let range = ['0','1','2','3','4','5','6','7'];\n        arr.push(this.guess().every(e => range.includes(e)))\n        arr.push(this.guess().length === 4)\n        // debugger\n        return arr\n    }\n\n    guessArray(){\n        debugger\n        let arr = this.state.pastGuesses;\n        let playerInput = this.state.playerInput\n        arr.push(playerInput);\n        return arr\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault();\n        // debugger\n        this.matchesResponse()\n        this.errorHandler()\n        if (this.state.status !== 'play'){\n            let arr = this.state.pastGuesses;\n            debugger\n            arr.push(this.guess())\n            return arr\n        }\n    }\n\n    update() {\n        return e => this.setState({\n            playerInput: e.currentTarget.value\n        });\n    }\n    \n\n    render() {\n        if (this.state.status === 'win') {\n            return (\n                <div className='winnerdiv'>\n                    <h1 className='headers'>WINNER WINNER!</h1>\n                    <div className='moveMessages'>Computers Guess: {this.state.compNumArr}</div>\n                    <div className='moveMessages'>Your Guess: {this.state.compNumArr}</div>\n                    <div className='moveMessages'>Number of tries: {this.state.try}</div>\n                    <div className='againButton'>\n                        <button className='checkButton' onClick={this.resetGame}>Play again</button>\n                    </div>\n                </div>\n            )\n        } else if (this.state.status === 'fail'){\n            return (\n                <div className='loserdiv'>\n                    <h1 className='headers' >BETTER LUCK NEXT TIME</h1>\n                    <div className='loserMessage'>\n                        <span>\n                            Your memory isn't quite there.\n                        </span>\n                        <span>\n                            The correct combination was {this.state.compNumArr}\n                        </span>\n                    </div>\n                    <div className='againButton'>\n                        <button className='playAgain' onClick={this.resetGame}> Play again </button>\n                    </div>\n                </div>\n            )\n        } else {\n        return (\n            <div className='papa-div'>\n                <div className='backgroundImg'>\n                    <div className='instructions'>\n                    <h1 className='headers'>Mastermind</h1>\n                        <div>Intructions:</div>\n                        <br/>\n                        <div>\n                            <div>\n                                Feel like you're getting old? Test the strength of the old noggin with Mastermind!\n                            </div>\n                            <div>\n                                This is a game in which the user should guess a combination of 4 numbers, ranging from 0-7.\n                            </div>\n                            <div>\n                                This game will provide feedback when you get an exact number, and its position.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='lilpapi-div'>\n                    <div className='rightSide'>\n                            <div className='stickyResults'>\n                                <div className='errorMessages'>{this.state.error}</div>\n                            </div>\n                            {/* <Bubbles\n                                guesses = {this.state.pastGuesses}\n                            /> */}\n                            <div className='guesses'>\n                                <h1>List of Guesses:</h1>\n                                {this.state.pastGuesses.map(guess => <li className='listGuesses'>{guess}</li>)}\n                            </div>\n                    </div>\n                    <div className='playerGuess'>\n                        <div className='lastMove'>{this.state.lastMove}</div>\n                        <form action=\"\" className='inputsnum'>\n                            <input className='numInput'type=\"text\" placeholder='Four numbers. 0-7' onChange={this.update('playerInput')}/>\n                            <button className='checkButton'onClick={this.handleSubmit}>Check</button>\n                        </form>\n                    </div>\n                    <div className='scoreDiv'>\n                        Score: \n                        <div>\n                            {this.state.score}   \n                        </div>\n                            <div>\n                            <button className='resetButt' onClick={this.resetGame}>Reset</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )}\n    }       \n}\n\nexport default GamePlay","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Footer = () => (\n    <div className='main-footer-div'>\n    <h1>&#169;Mastermind Created by Claudius E. Solomon</h1>\n    <div className='footer-div'>\n        <div className='technology-row'>\n            <h3>Technology Used</h3>\n            <div className='tech-list'>\n                Express   \n            </div>\n            <div className='tech-list'>\n                Javascript\n            </div>\n            <div className='tech-list'>\n                React\n            </div>\n            <div className='tech-list'>\n                HTML\n            </div>\n            <div className='tech-list'>\n                CSS\n            </div>\n        </div>\n        <div className='bio-div'>\n            <h2>About Me</h2>\n            <ul>\n                <div>\n                    Born and raised in Silver Spring, MD. \n                </div> \n                <br/>\n                <div>\n                    Currently residing in San Francisco.\n                </div>\n                <br/>\n                <div>\n                    Software Engineer App Academy.\n                </div>\n            </ul>\n        </div>\n\n        <div className='about-me'>\n            <h2>This is a LinkedIn Reach Project</h2>\n            <div className='contact-me'>\n                <a href=\"https://www.linkedin.com/in/claudius-solomon-ba3a2494/\">\n                    <img src=\"linkedin.png\" className='contact-img' alt=\"\"/>\n                    LinkedIn\n                </a>\n            </div>\n            <div className='contact-me'>\n                <a href=\"https://github.com/clauddyf\">\n                    <img src=\"github.png\" className='contact-img' alt=\"\"/>\n                    GitHub\n                </a>\n            </div>\n        </div>\n    </div>\n\n    </div>\n)\n\nexport default Footer;","import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router';\nimport Play from './game_play'\nimport footer from './footer'\nimport Footer from './footer';\nimport Greeting from './greeting'; \nimport Bubbles from './bubbles'\n\nconst App = () => (\n    <div className= 'app-container'>\n        <header className=\"nav-bar\">\n            <Greeting/>\n        </header>\n        <Switch>\n            <Route path='/' render={props =>(\n                <Play {...props}/>\n            )}/>\n            \n        </Switch>\n        <Footer/>\n    </div>\n);\n\nexport default withRouter(App);","import React from 'react';\n// import ReactDom from 'react-dom';\n// import Root from './components/root';\n// import configureStore from './store/store';\nimport {render} from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './app'\n\n// document.addEventListener('DomContentLoaded',() => {\n//      let store;\n//      store = configureStore({})\n//      const root = document.getElementById('root');\n//      ReactDom.render(<Root store={store}/>, root);\n// })\n\nrender((\n     <BrowserRouter>\n          <App/>\n     </BrowserRouter>\n), document.getElementById('root')\n)"],"sourceRoot":""}